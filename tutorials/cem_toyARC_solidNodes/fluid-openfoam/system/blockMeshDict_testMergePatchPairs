/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2112                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2112;
    format      ascii;
    class       dictionary;
    location    system;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1;

vertices
(
	//Block-1 lower horz
        (0.01 0.01 0.00)
        (0.19 0.01 0.00)
        (0.19 0.02 0.00)
        (0.01 0.02 0.00)
        (0.01 0.01 0.01)
        (0.19 0.01 0.01)
        (0.19 0.02 0.01)
        (0.01 0.02 0.01)

	//Block-2 left vertical channel
        (0.01 0.02 0.00)
        (0.02 0.02 0.00)
        (0.02 0.18 0.00)
        (0.01 0.18 0.00)
        (0.01 0.02 0.01)
        (0.02 0.02 0.01)
        (0.02 0.18 0.01)
        (0.01 0.18 0.01)

        //Block-3 upper horz 
        (0.01 0.18 0.00)
        (0.19 0.18 0.00)
        (0.19 0.19 0.00)
        (0.01 0.19 0.00)
        (0.01 0.18 0.01)
        (0.19 0.18 0.01)
        (0.19 0.19 0.01)
        (0.01 0.19 0.01)
);

blocks
(
    hex ( 0  1  2  3  4  5  6  7) (180  10 1) simpleGrading (1 1 1)
    hex ( 8  9 10 11 12 13 14 15) ( 10 160 1) simpleGrading (1 1 1)
    hex (16 17 18 19 20 21 22 23) (180  10 1) simpleGrading (1 1 1)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (18 17 21 22)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (2 1 5 6)
        );
    }

    walls
    {
        type wall;
        faces
        (
            (1 0 4 5)
	    //(3 2 7 6)
	    (0 3 4 7)
	    (10 9 13 14)
	    (8 11 15 12)
	    //(17 16 20 21)
	    (16 19 23 20)
	    (19 18 22 23)
        );
    }

    wall1
    {
	type wall;
	faces
	(
	    (3 2 7 6)
	);
    }

    wall2
    {
        type wall;
        faces
        (
            (17 16 20 21)
        );
    }

    wall1_merge
    {
        type wall;
        faces
        (
            (8 9 13 12)
        );
    }

    wall2_merge
    {
        type wall;
        faces
        (
            (10 11 15 14)
        );
    }

/*
    walls_merge
    {
        type wall;
        faces
        (
	    (8 9 13 12)
	    (10 11 15 14)
        );
    }
*/

    frontAndBack
    {
	type wall;
	faces
	(
	    (0 1 2 3)
	    (5 4 7 6)
	    (8 9 10 11)
	    (13 12 15 14)
	    (16 17 18 19)
	    (21 20 23 22)
	);
    }
);

mergePatchPairs
(
    	//(walls walls_merge)
	(wall1 wall1_merge)
	(wall2 wall2_merge)
);
